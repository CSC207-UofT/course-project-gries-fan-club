[
  {
    "name": "Storage",
    "superclasses": "",
    "subclasses": "",
    "type": 3,
    "responsibilities": [
      "A base interface for storages",
      "+ type(), returns a string representing the type of data this interface can load / store",
      "+ loadEntity(Row), creates and stores a single entity from a row of data (if valid)",
      "+ loadFrom(Loader), loads entities from a given loader's data"
    ],
    "collaborators": [
      ""
    ]
  },
  {
    "name": "RecipeStorage",
    "superclasses": "Storage",
    "subclasses": "",
    "type": 3,
    "responsibilities": [
      "Stores a database of recipes. Allows for searching, addition, removing, etc.",
      "+ recipes(), gets all recipes in this storage",
      "+ find(String), find recipes by name / Regex on name",
      "+ find(Tag[]), finds recipes will all given tags",
      "+ find(Ingredients[]), finds recipes with given ingredients"
    ],
    "collaborators": [
      "Recipe",
      "Tag",
      "Loader",
      "Ingredient"
    ]
  },
  {
    "name": "IngredientStorage",
    "superclasses": "Storage",
    "subclasses": "",
    "type": 3,
    "responsibilities": [
      "Similar to the recipe storage excepts acts as a database for all ingredient types"
    ],
    "collaborators": [
      "Ingredient",
      "Tag"
    ]
  },
  {
    "name": "Fridge",
    "superclasses": "IngredientStorage",
    "subclasses": "",
    "type": 3,
    "responsibilities": [
      "An extension of the ingredient storage which solely represents which ingredients you currently have.",
      "+ add(Ingredient)",
      "+ remove(Ingredient)",
      "+ has(Ingredient)"
    ],
    "collaborators": [
      ""
    ]
  }
]